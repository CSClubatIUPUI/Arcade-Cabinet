# For MAPPINGS: Slash is the control button, Num1 is the Player1 Start and Num2 is the Player2 Start
# All other mappings are just their key, uppercased

# ------------- Tetris Battle ------------- #
# NAME Tetris Battle
# EXE_PATH tetris-battle/
# START2 npm start
# BG_COLOR 60 20 255
# LOGO assets/logo.png

# MAPPING Player 1 Right:D
# MAPPING Player 1 Left:A
# MAPPING Player 1 Down:S
# MAPPING Player 1 Rotate:F
# MAPPING Player 1 Drop tetromino:E
# MAPPING Player 1 Hold tetromino:Q
# MAPPING Player 2 Right:L
# MAPPING Player 2 Left:J
# MAPPING Player 2 Down:K
# MAPPING Player 2 Rotate:H
# MAPPING Player 2 Drop tetromino:U
# MAPPING Player 2 Hold tetromino:O

# INSTRUCTION Organise your tetrominoes in solid rows
# INSTRUCTION Complete a row to delete it and send it to your opponent
# INSTRUCTION Dont hit the top!

# AUTHOR Brandon Freeman
# LANGUAGE JavaScript

# END_GAME_ENTRY

# ------------- Dodgy Blocks ------------- #
# NAME Dodgy Blocks
# EXE_PATH dodgy_blocks/dodgy_blocks/
# START1 rm dodgy_blocks && cmake . && make && ./dodgy_blocks
# BG_COLOR 23 119 200
# LOGO logo.png

# MAPPING Quit:Slash
# MAPPING Move Left:A
# MAPPING Move Right:D
# MAPPING Boost Speed:F
# INSTRUCTION White removes a life
# INSTRUCTION Blue awards 25 points
# INSTRUCTION Red awards an extra life, max 3

# AUTHOR Daniel Peach
# LANGUAGE C++ with SFML

# END_GAME_ENTRY

# ------------- Operation Nebula ------------- #
NAME Operation Nebula
EXE_PATH space_raider/
START1 cmake . && make && ./primer
BG_COLOR 23 119 200
LOGO assets/images/logo.png

MAPPING Move Up:W
MAPPING Move Left:A
MAPPING Move Down:S
MAPPING Move Right:D
MAPPING Pickup/Sell:E
MAPPING Quit:Slash
INSTRUCTION Collect resources
INSTRUCTION Sell them at the station for points
INSTRUCTION Dont hit the other ships!
INSTRUCTION Five lives before you die
INSTRUCTION Get as many points as possible!

AUTHOR Daniel Peach
LANGUAGE C++ with SFML

# END_GAME_ENTRY # uncomment this when adding another game

# ------------- Slime Snake ------------- #
# NAME Slime Snake
# EXE_PATH slime-snake/
# START1 npm start
# BG_COLOR 60 20 255
# LOGO assets/logo.png

# MAPPING Move Right:D
# MAPPING Move Left:A
# MAPPING Move Up:W
# MAPPING Move Down:S
# MAPPING Start Game:F
# MAPPING Attack:F
# MAPPING Rotate Slimes:X
# MAPPING De-rotate Slimes:Z
# MAPPING Use Slime Special Ability:F
# MAPPING Restart:E
# MAPPING Quit:Slash

# AUTHOR Trenton Spice, Kyle Peeler, Timothy Hickam
# LANGUAGE JavaScript with Phaser.js

# END_GAME_ENTRY

# ------------- Signal Boost ------------- #
# NAME Signal Boost
# EXE_PATH signal_boost/
# START1 love game 1
# START2 love game 2
# BG_COLOR 3 186 176
# LOGO game/assets/cover_image.png

# MAPPING P1 Move Up:W
# MAPPING P1 Move Down:S
# MAPPING P1 Fire:F
# MAPPING P1 Reset:E
# MAPPING P2 Move Up:I
# MAPPING P2 Move Down:K
# MAPPING P2 Fire:H
# MAPPING P2 Reset:U
# MAPPING Quit:Slash
# INSTRUCTION Use your paddle to keep the signal alive!
# INSTRUCTION Fire to shoot the enemies.
# INSTRUCTION Work together or play solo.

# AUTHOR Jake White
# LANGUAGE Lua with LOVE2D

# END_GAME_ENTRY

# ------------- Mode Zero Racing ------------- #
# NAME Mode Zero Racing
# EXE_PATH mode-zero-racing/
# START2 python3 main.py
# BG_COLOR 200 119 24
# LOGO assets/logo.png

# MAPPING Player 1 Gas:W
# MAPPING Player 1 Turn Left:A
# MAPPING Player 1 Turn Right:D
# MAPPING Player 2 Gas:I
# MAPPING Player 2 Turn Left:J
# MAPPING Player 2 Turn Right:L
# MAPPING Quit:Slash

# INSTRUCTION Drive and outrace your opponent!
# INSTRUCTION Dont forget to stay on the gas while turning

# AUTHOR Evan Wilt, Jake White
# LANGUAGE python3 with pygame

# END_GAME_ENTRY

# ------------- Duck Hunter ------------- #
# NAME Duck Hunter
# EXE_PATH duck_hunter/
# START1 cmake . && make && ./duck_hunter
# BG_COLOR 200 119 24
# LOGO logo.png

# MAPPING Move Up:W
# MAPPING Move Down:S
# MAPPING Move Left:A
# MAPPING Move Right:D
# MAPPING Fire Gun:F
# MAPPING Quit:Slash
# INSTRUCTION Shoot the ducks :)

# AUTHOR Daniel Peach
# LANGUAGE C++ with SFML

# END_GAME_ENTRY

# ------------- Cube Checkers ------------- #
# NAME Cube Checkers
# EXE_PATH cube_checkers/
# START2 rm cube_checkers && cmake . && make && ./cube_checkers
# BG_COLOR 255 20 20
# LOGO assets/images/logo.png

# MAPPING Player 1 Move Up:W
# MAPPING Player 1 Move Down:S
# MAPPING Player 1 Move Left:A
# MAPPING Player 1 Move Right:D
# MAPPING Player 2 Move Up:I
# MAPPING Player 2 Move Down:K
# MAPPING Player 2 Move Left:J
# MAPPING Player 2 Move Right:L
# MAPPING Player 1 Select:F
# MAPPING Player 2 Select:H
# MAPPING Quit:Slash

# INSTRUCTION Move a piece, increment a piece
# INSTRUCTION When you get a piece value to 6, it is a king
# INSTRUCTION You have to take a jump if it is available
# INSTRUCTION No incrementing after a jump
# INSTRUCTION Clear or block all opponent pieces

# AUTHOR Daniel Peach
# LANGUAGE C++ with SFML

# END_GAME_ENTRY

# ------------- Arcade Chess ------------- #
# NAME Arcade Chess
# EXE_PATH arcade_chess/
# START2 npm start
# BG_COLOR 255 20 20
# LOGO logo.png

# MAPPING Player 1 Move Up:W
# MAPPING Player 1 Move Down:S
# MAPPING Player 1 Move Left:A
# MAPPING Player 1 Move Right:D
# MAPPING Player 2 Move Up:I
# MAPPING Player 2 Move Down:K
# MAPPING Player 2 Move Left:J
# MAPPING Player 2 Move Right:L
# MAPPING Player 1 Select:F
# MAPPING Player 2 Select:H
# MAPPING Quit:Slash

# INSTRUCTION Play chess :)

# AUTHOR Daniel Peach
# LANGUAGE JavaScript with HTML Canvas

# END_GAME_ENTRY
